# CVE-2021-43890: Windows AppX Installer Spoofing Vulnerability
# https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-43890
if($((Get-AppxPackage Microsoft.DesktopAppInstaller).Version) -lt 1.21.3421.0){
    $RegistryPaths = @(
        "registry::HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\AppInstaller",
        "registry::HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Policies\Microsoft\Windows\AppInstaller"
    ) 

    #region Functions:
    function Test-RegistryValue {
        param (
            [parameter(Mandatory=$true)] [ValidateNotNullOrEmpty()]$Path,
            [parameter(Mandatory=$true)] [ValidateNotNullOrEmpty()]$Value 
        )    
        try {    
            Get-ItemProperty -Path $Path | Select-Object -ExpandProperty $Value -ErrorAction Stop | Out-Null return $true 
        }    
        catch {    
            return $false    
        }    
    }
    #endregion Functions

    Foreach($RegistryPath in $RegistryPaths){
        # Check if the Appinstaller registry key already exists
        if (-not $(Test-Path $RegistryPath)) {
             New-Item -Path $RegistryPath -Force
        }

        if(-not $(Test-RegistryValue -Path $RegistryPath -Value "EnableMSAppInstallerProtocol")){
            New-ItemProperty -Path $RegistryPath -Name "EnableMSAppInstallerProtocol" -Value "0" -PropertyType Dword -Force
        }
        Else{
            Set-ItemProperty -Path $RegistryPath -Name "EnableMSAppInstallerProtocol" -Value "0" -Force
        }
    }

    try{
        # install latest version of DesktopAppInstaller
        $assetPattern = "*Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle"
        $licensePattern = "*_License1.xml"
        $releasesUri = "https://api.github.com/repos/microsoft/winget-cli/releases/latest"
        $asset = (Invoke-RestMethod -Uri $releasesUri -Method Get -ErrorAction stop).assets | Where-Object name -like $assetPattern
        $downloadAssetUri = $asset.browser_download_url

        $license = (Invoke-RestMethod -Uri $releasesUri -Method Get -ErrorAction stop).assets | Where-Object name -like $licensePattern
        $downloadLicenseUri = $license.browser_download_url

        if(-not $(Test-Path -Path "$env:TEMP\WinGet")){
            New-Item -Path "$env:TEMP" -Name "WinGet" -ItemType Directory -Force
        }

        $installerPath = "$env:TEMP\WinGet\$($asset.name)"
        Invoke-RestMethod -Uri $downloadAssetUri -OutFile $installerPath
        Unblock-File -Path $installerPath
        $licensePath = "$env:TEMP\WinGet\$($license.name)"
        Invoke-RestMethod -Uri $downloadLicenseUri -OutFile $licensePath
        Unblock-File -Path $licensePath

        # Dependencies
        ## Microsoft.UI.Xaml
        $UIXamlPath = "$env:TEMP\WinGet\Microsoft.UI.Xaml.zip"
        $downloadUIXamlUri = "https://www.nuget.org/api/v2/package/Microsoft.UI.Xaml/2.7.0"
        $UIXaml = Invoke-RestMethod -Uri $downloadUIXamlUri -OutFile $UIXamlPath
        Unblock-File -Path $UIXamlPath
        Expand-Archive -Path $UIXamlPath -DestinationPath "$env:TEMP\WinGet\Microsoft.UI.Xaml"
        $UIXamlAppxPath = "$env:TEMP\WinGet\Microsoft.UI.Xaml\tools\AppX\x64\Release\Microsoft.UI.Xaml.2.7.appx"

        ## Microsoft.VCLibs.x64.14.00.Desktop
        $VCLibsPath = "$env:TEMP\WinGet\Microsoft.VCLibs.x64.14.00.Desktop.appx"
        $downloadVClibsUri = "https://aka.ms/Microsoft.VCLibs.x64.14.00.Desktop.appx"
        $VCLibs = Invoke-RestMethod -Uri $downloadVClibsUri -OutFile $VCLibsPath
        Unblock-File -Path $VCLibsPath

        Try{
            Add-AppxProvisionedPackage -Online -PackagePath $installerPath -LicensePath $licensePath -Verbose -LogPath "$env:TEMP\WinGet\DesktopAppInstaller_Install.log" -DependencyPackagePath "$UIXamlAppxPath", "$VCLibsPath"
        }
        Catch{
            try{
                Add-AppxPackage -Path $installerPath -DependencyPath "$UIXamlAppxPath", "$VCLibsPath" -InstallAllResources
            }
            catch{
                Write-Output $_.Exception.Message
                Write-Output $Error[0]
            }
        }
        # cleanup
        Get-ChildItem -Path "$env:TEMP\WinGet" -Recurse | Where-Object { -not ($_.psiscontainer) } | Remove-Item -Force
        Get-ChildItem -Path "$env:TEMP\WinGet" -Recurse  | Remove-Item -Force
        Get-Item -Path "$env:TEMP\WinGet" | Remove-Item -Force 
    }
    catch{
        Add-AppxPackage -RegisterByFamilyName -MainPackage Microsoft.DesktopAppInstaller_8wekyb3d8bbwe
        $ResolveWingetPath = Resolve-Path "C:\Program Files\WindowsApps\Microsoft.DesktopAppInstaller_*_x64__8wekyb3d8bbwe"
        if ($ResolveWingetPath){
            $WingetPath = $ResolveWingetPath[-1].Path
            Add-AppxPackage -DisableDevelopmentMode -Register "$WingetPath\AppXManifest.xml" -Verbose
        }
    }
}
